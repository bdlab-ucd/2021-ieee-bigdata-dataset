name = "102-base"

io {
  matsim-network-file = "Golden_CO.xml"
  matsim-config-file = "matsim-config.xml"
  name-prefix = "matsim-golden-co"
  matsim-log-level = "WARN"
}

algorithm {
  grid {
    min-x = -11715308.93
    max-x = -11706548.83
    min-y = 4822215.1
    max-y = 4834563.74
    grid-cell-side-length = 1000
    srid = 3857
  }
}
algorithm {
  type = system-optimal
  name = "base"
  selection-algorithm.type = tsp-selection
}
algorithm.ksp-algorithm = {
  type = svp-lo-sync
  k = 16
  theta = 0.5951734265375682
  min-batch-size = 2
  ksp-termination-function = {
    type = paths-seen
    seen = 28
  }
}
algorithm.batching-function = {
  type = label-based-trajectory-clustering
  omega-delta = 0.43343581000756515
  omega-beta = 0.5665641899924349
  omega-a = 0.4720765628915853
  omega-s = 0.5279234371084147
  max-iterations = 100
  max-runtime-milliseconds = 5415
  trajectory-time-limit = 216
}
algorithm.batch-filter-function = {
  type = top-k-ranking-batch-filter
  k = 33
  batch-overlap-function = {
    type = agent-proportional 
    path-overlap-lookup-type.type = tsp 
    overlap-cost-type.type = non-normalized
    use-link-weights = true
  }
}
population {
  work-activity-min-time = "08:30:00"
  work-activity-max-time = "09:30:00"
  work-duration-hours    = 8
  size = 9758
}
routing {
  adoption-rate = 0.2210534992003635
  batch-window = 49
  max-path-assignments = 86400                             
  minimum-replanning-lead-time = 49                            
  min-batch-size = 2                                                     
  min-batch-search-space = 0                                             
  minimum-replanning-wait-time = 49                            
  minimum-average-improvement = 0                                        
  min-request-update-threshold = 49                  
  min-network-update-threshold = 49                  
  selfish {
    type = dijkstra
    path-to-marginal-flows-function.type = default
    combine-flows-function.type = sum
    marginal-cost-function = {
      type = edge-bpr-function
      alpha = 0.15
      beta = 2.9790434984236507
    }
  }
}
io.routing-report-config.type = all-aggregate
io.matsim-log-level = "WARN"
io.output-base-directory = ""


run {
  start-of-sim-time = 0
  end-of-sim-time = 86400
  end-of-routing-time = 86399
  matsim-step-size = 1.0
  matsim-semaphore-timeout-ms = 60000
  simulation-tail-timeout = "2 minutes"
}

algorithm {
  ksp-filter-function = {
    type = travel-time-and-link-count
    max-edge-visits = 2
    travel-time-threshold = 300
    link-count = 25
  }
  edge-update-function.type = flow-count
  path-to-marginal-flows-function.type = default
  combine-flows-function.type = sum
  marginal-cost-function = {
    type = edge-bpr-function
    alpha = 0.15
    beta = 2.9790434984236507
  }
  use-free-flow-network-costs-in-path-search = true
}
